/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package com.twitter.zipkin.gen;


import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

/**
 * The raw data in our storage might have various problems. How should we adjust it before
 * returning it to the user?
 * 
 * Time skew adjuster tries to make sure that even though servers might have slightly
 * different clocks the annotations in the returned data are adjusted so that they are
 * in the correct order.
 */
public enum Adjust implements TEnum {
  NOTHING(0),
  TIME_SKEW(1);

  private final int value;

  private Adjust(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static Adjust findByValue(int value) { 
    switch (value) {
      case 0:
        return NOTHING;
      case 1:
        return TIME_SKEW;
      default:
        return null;
    }
  }
}
